// Code generated by MockGen. DO NOT EDIT.
// Source: ./repository/EstateRepository.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"
	entity "test_sawit_pro/entity"

	gomock "github.com/golang/mock/gomock"
)

// MockEstateRepository is a mock of EstateRepository interface.
type MockEstateRepository struct {
	ctrl     *gomock.Controller
	recorder *MockEstateRepositoryMockRecorder
}

// MockEstateRepositoryMockRecorder is the mock recorder for MockEstateRepository.
type MockEstateRepositoryMockRecorder struct {
	mock *MockEstateRepository
}

// NewMockEstateRepository creates a new mock instance.
func NewMockEstateRepository(ctrl *gomock.Controller) *MockEstateRepository {
	mock := &MockEstateRepository{ctrl: ctrl}
	mock.recorder = &MockEstateRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEstateRepository) EXPECT() *MockEstateRepositoryMockRecorder {
	return m.recorder
}

// CreateEstate mocks base method.
func (m *MockEstateRepository) CreateEstate(ctx context.Context, estate *entity.Estate) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateEstate", ctx, estate)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateEstate indicates an expected call of CreateEstate.
func (mr *MockEstateRepositoryMockRecorder) CreateEstate(ctx, estate interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateEstate", reflect.TypeOf((*MockEstateRepository)(nil).CreateEstate), ctx, estate)
}

// GetEstateByID mocks base method.
func (m *MockEstateRepository) GetEstateByID(ctx context.Context, id string) (*entity.Estate, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEstateByID", ctx, id)
	ret0, _ := ret[0].(*entity.Estate)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetEstateByID indicates an expected call of GetEstateByID.
func (mr *MockEstateRepositoryMockRecorder) GetEstateByID(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEstateByID", reflect.TypeOf((*MockEstateRepository)(nil).GetEstateByID), ctx, id)
}

// GetEstateSize mocks base method.
func (m *MockEstateRepository) GetEstateSize(ctx context.Context, id string) (int, int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEstateSize", ctx, id)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(int)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetEstateSize indicates an expected call of GetEstateSize.
func (mr *MockEstateRepositoryMockRecorder) GetEstateSize(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEstateSize", reflect.TypeOf((*MockEstateRepository)(nil).GetEstateSize), ctx, id)
}
